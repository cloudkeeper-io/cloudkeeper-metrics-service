service:
  name: cloudkeeper-metrics-service

plugins:
  - serverless-webpack
  - serverless-pseudo-parameters
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  versionFunctions: false
  memorySize: 256
  region: eu-central-1
  environment:
    stage: ${self:custom.stage}
  iamRoleStatements:
    ${file(roleStatements.yml)}

custom:
  stage: ${opt:stage, self:provider.stage}
  dbName: ${ssm:${self:custom.stage}-metrics-db-name}
  dbHost: ${ssm:${self:custom.stage}-metrics-db-host}
  dbUser: ${ssm:${self:custom.stage}-metrics-db-user}
  dbPassword: ${ssm:${self:custom.stage}-metrics-db-password}

functions:
  trigger-update-lambdas:
    handler: src/update/lambda-configuration/trigger-lambda-config-update.handler
    events:
      - schedule: cron(1 * ? * * *)

  update-tenant-lambdas:
    timeout: 120
    handler: src/update/lambda-configuration/update-lambda-configurations-for-tenant.handler
    environment:
      dbName: ${self:custom.dbName}
      dbHost: ${self:custom.dbHost}
      dbUser: ${self:custom.dbUser}
      dbPassword: ${self:custom.dbPassword}

  trigger-lambda-stats-update:
    handler: src/update/lambda-stats/trigger-lambda-stats-update.handler
    events:
      - schedule: cron(5 * ? * * *)

  update-tenant-lambda-stats:
    timeout: 300
    handler: src/update/lambda-stats/update-tenant-lambda-stats.handler
    environment:
      dbName: ${self:custom.dbName}
      dbHost: ${self:custom.dbHost}
      dbUser: ${self:custom.dbUser}
      dbPassword: ${self:custom.dbPassword}
      finishedTopic: "arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:${self:custom.stage}-finished-updating-lambda-stats"

  prepare-data-for-tenant:
    timeout: 240
    handler: src/update/prepare-data/prepare-data-for-tenant.handler
    environment:
      bucket: ${self:custom.stage}-cloudkeeper-tenant-data
      dbName: ${self:custom.dbName}
      dbHost: ${self:custom.dbHost}
      dbUser: ${self:custom.dbUser}
      dbPassword: ${self:custom.dbPassword}
    events:
      - sns:
          arn: "arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:${self:custom.stage}-finished-updating-lambda-stats"

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-tenant-cloud-configuration
        AttributeDefinitions:
          - AttributeName: tenantId
            AttributeType: S
        KeySchema:
          - AttributeName: tenantId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    FinishedUpdatingLambdaStats:
      Type: "AWS::SNS::Topic"
      Properties:
        DisplayName: ${self:custom.stage}-finished-updating-lambda-stats
        TopicName: ${self:custom.stage}-finished-updating-lambda-stats

    CloudkeeperTenantData:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.stage}-cloudkeeper-tenant-data
